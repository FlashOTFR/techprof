{"version":3,"sources":["components/Home/picture-min.jpg","components/DrawerToggleButton/index.jsx","components/Toolbar/index.jsx","components/SideDrawer/index.jsx","components/Backdrop/index.jsx","components/Footer/index.jsx","components/Timer/index.jsx","components/Home/index.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","DrawerToggleButton","props","className","onClick","click","Toolbar","drawerClickHandler","href","SideDrawer","drawerClasses","show","Backdrop","Component","Timer","state","this","date","toLocaleTimeString","Home","src","Pic","Date","App","sideDrawerOpen","homeActive","contactActive","portfolioActive","drawerToggleClickHandler","setState","prevState","backdropClickHandler","backdrop","style","height","marginTop","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"yFAAAA,EAAOC,QAAU,IAA0B,yC,4UCW5BC,G,qBARY,SAAAC,GAAK,OAC5B,4BAAQC,UAAU,gBAAgBC,QAASF,EAAMG,OAC7C,yBAAKF,UAAU,uBACf,yBAAKA,UAAU,uBACf,yBAAKA,UAAU,0BC6BRG,EA/BC,SAAAJ,GAAK,OACjB,4BAAQC,UAAU,WACd,yBAAKA,UAAU,sBACX,yBAAKA,UAAU,yBACX,kBAAC,EAAD,CAAoBE,MAAOH,EAAMK,sBAErC,yBAAKJ,UAAU,gBACX,uBAAGK,KAAK,KAAR,oBAEJ,yBAAKL,UAAU,WAGf,yBAAKA,UAAU,4BACX,4BACI,4BACI,uBAAGK,KAAK,KAAR,UAGJ,4BACA,uBAAGA,KAAK,KAAR,cAGA,4BACA,uBAAGA,KAAK,KAAR,iBCALC,G,OAzBI,SAAAP,GACf,IAAIQ,EAAgB,cAIxB,OAHOR,EAAMS,OACLD,EAAgB,oBAGpB,yBAAKP,UAAWO,GACZ,4BACI,4BACI,uBAAGF,KAAK,KAAR,UAGJ,4BACI,uBAAGA,KAAK,KAAR,cAGJ,4BACI,uBAAGA,KAAK,KAAR,gBCbDI,G,OAJE,SAAAV,GAAK,OAClB,yBAAKC,UAAU,WAAWC,QAASF,EAAMG,U,UCDxBQ,Y,iBCYNC,G,mNAVXC,MAAQ,G,uDAEJ,OACI,yBAAKZ,UAAU,SACX,4BAAKa,KAAKd,MAAMe,KAAKC,2B,GALjBL,cC4BLM,G,mNA1BXJ,MAAQ,G,uDAEJ,OACI,6BAEZ,yBAAKZ,UAAU,aACX,yBAAKA,UAAU,OAEX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,eACX,wBAAIA,UAAU,QAAd,mBAEA,yBAAKiB,IAAKC,IAAKlB,UAAU,QAEzB,kBAAC,EAAD,CAAOc,KAAM,IAAIK,gB,GAfdT,cC6CJU,E,4MAxCbR,MAAQ,CACNS,gBAAgB,EAChBC,YAAY,EACZC,eAAe,EACfC,iBAAiB,G,EAGnBC,yBAA2B,WACzB,EAAKC,UAAS,SAACC,GACb,MAAO,CAACN,gBAAiBM,EAAUN,oB,EAIvCO,qBAAuB,WACrB,EAAKF,SAAS,CAACL,gBAAgB,K,uDAI/B,IAAIQ,EAMJ,OAJIhB,KAAKD,MAAMS,iBACbQ,EAAW,kBAAC,EAAD,CAAU3B,MAAOW,KAAKe,wBAKnC,yBAAKE,MAAO,CAACC,OAAQ,SACnB,kBAAC,EAAD,CAAS3B,mBAAoBS,KAAKY,2BAClC,kBAAC,EAAD,CAAYjB,KAAMK,KAAKD,MAAMS,iBAC5BQ,EACD,0BAAMC,MAAO,CAACE,UAAW,SACzB,kBAAC,EAAD,CAAMxB,KAAMK,KAAKD,MAAMU,mB,GAhCXZ,aCGEuB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.23a872e1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/picture-min.7d1c0542.jpg\";","import React from 'react';\nimport './style.css';\n\nconst DrawerToggleButton = props => (\n    <button className=\"toggle-button\" onClick={props.click}>\n        <div className=\"toggle-button_line\"></div>\n        <div className=\"toggle-button_line\"></div>\n        <div className=\"toggle-button_line\"></div>\n    </button>\n);\n\nexport default DrawerToggleButton;","import React from 'react';\nimport './style.css';\nimport '../DrawerToggleButton/index';\nimport DrawerToggleButton from '../DrawerToggleButton/index';\n\nconst Toolbar = props => (\n    <header className=\"toolbar\">\n        <nav className=\"toolbar_navigation\">\n            <div className=\"toolbar_toggle-button\">\n                <DrawerToggleButton click={props.drawerClickHandler}/>\n            </div>\n            <div className=\"toolbar_logo\">\n                <a href=\"/\">Randall Burgess</a>\n            </div>\n            <div className=\"spacer\">\n\n            </div>\n            <div className=\"toolbar_navigation_items\">\n                <ul>\n                    <li>\n                        <a href=\"/\">About</a>\n                    </li>\n\n                    <li>\n                    <a href=\"/\">Portfolio</a>\n                    </li>\n\n                    <li>\n                    <a href=\"/\">Contact</a>\n                    </li>\n                </ul>\n            </div>\n        </nav>\n    </header>\n);\n\nexport default Toolbar;","import React from 'react';\nimport \"./style.css\";\n\nconst SideDrawer = props => {\n    let drawerClasses = 'side-drawer';\n    if(props.show){\n        drawerClasses = 'side-drawer open';\n    }\nreturn(\n    <nav className={drawerClasses}>\n        <ul>\n            <li>\n                <a href=\"/\">About</a>\n            </li>\n\n            <li>\n                <a href=\"/\">Portfolio</a>\n            </li>\n\n            <li>\n                <a href=\"/\">Contact</a>\n            </li>\n\n        </ul>\n    </nav>\n);\n};\n\nexport default SideDrawer;","import React from 'react';\nimport './style.css';\n\nconst Backdrop = props => (\n    <div className=\"backdrop\" onClick={props.click}></div>\n);\n\nexport default Backdrop;","import React, { Component } from 'react';\nimport './style.css';\n\nclass Footer extends Component {\n    state = {  }\n    render() { \n        return ( \n            <footer>\n    <div className=\"container\">\n      <div className=\"row\">\n      \n        <div className=\"col-md-4\">\n          <a href=\"https://www.linkedin.com/in/randall-burgess-a93a8451/\"><h3>LinkedIn</h3></a>\n        </div>\n      \n        <div className=\"col-md-4\">\n          <h1>Randy Is Cool</h1>\n        </div>\n      \n        <div className=\"col-md-4\">\n      <a href=\"https://github.com/FlashOTFR\"><h3>GitHub</h3></a>\n        </div>\n\n      </div>\n    </div>\n</footer>\n         );\n    }\n}\n \nexport default Footer;","import React, { Component } from 'react';\nimport './style.css';     \n\n\nclass Timer extends Component {\n    state = {  }\n    render() { \n        return ( \n            <div className=\"Timer\">\n                <h1>{this.props.date.toLocaleTimeString()}</h1>    \n            </div>\n         );\n    }\n}\n \nexport default Timer;","import React, { Component } from 'react';   \nimport Pic from './picture-min.jpg';\nimport Timer from '../Timer';\nimport './style.css';\n\nclass Home extends Component {\n    state = {  }\n    render() { \n        return ( \n            <div>\n\n<div className=\"container\">\n    <div className=\"row\">\n\n        <div className=\"col-md-12\">\n            <div className=\"center-home\"> \n                <h1 className=\"name\">RANDALL BURGESS</h1>\n\n                <img src={Pic} className='pic' />\n\n                <Timer date={new Date()}/>\n            </div>\n        </div>\n\n    </div>\n</div>\n\n</div>\n         );\n    }\n}\n \nexport default Home;","import React, { Component } from 'react'; \nimport { render } from '@testing-library/react';\nimport Toolbar from './components/Toolbar';\nimport SideDrawer from './components/SideDrawer';\nimport Backdrop from './components/Backdrop';\nimport DrawerToggleButton from './components/DrawerToggleButton';\nimport Footer from './components/Footer';\nimport Home from './components/Home';\n\nclass App extends Component {\n  state = {\n    sideDrawerOpen: false,\n    homeActive: true,\n    contactActive: false,\n    portfolioActive: false\n  };\n\n  drawerToggleClickHandler = () => {\n    this.setState((prevState) => {\n      return {sideDrawerOpen: !prevState.sideDrawerOpen};\n    }); \n  };\n\n  backdropClickHandler = () => {\n    this.setState({sideDrawerOpen: false})\n  };\n\n  render() {\n    let backdrop;\n\n    if (this.state.sideDrawerOpen) {\n      backdrop = <Backdrop click={this.backdropClickHandler}/>\n      \n    }\n    return (\n\n    <div style={{height: '100%'}}>\n      <Toolbar drawerClickHandler={this.drawerToggleClickHandler}/>\n      <SideDrawer show={this.state.sideDrawerOpen} />\n      {backdrop}\n      <main style={{marginTop: '64px'}}>        \n      <Home show={this.state.homeActive} />\n      </main>\n    </div>\n    )}\n\n\n\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}